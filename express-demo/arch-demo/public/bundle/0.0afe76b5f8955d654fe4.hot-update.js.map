{"version":3,"sources":["webpack:///0.0afe76b5f8955d654fe4.hot-update.js","webpack:///./public/client/index.js?85bc"],"names":["webpackHotUpdate","44","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_react","_react2","_reactDom","_reactRedux","_createBrowserHistory","_createBrowserHistory2","_configureStore","_configureStore2","_components","_components2","rootEl","document","getElementById","history","store","unlisten","location","listen","action","console","log","pathname","state","render","createElement","Provider","push","some"],"mappings":"AAAAA,iBAAiB,GAEXC,GACA,SAAUC,EAAQC,EAASC,GAEjC,YA6BA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GClCvF,GAAAG,GAAAL,EAAA,GDUIM,EAAUL,EAAuBI,GCTrCE,EAAAP,EAAA,GACAQ,EAAAR,EAAA,GACAS,EAAAT,EAAA,IDeIU,EAAyBT,EAAuBQ,GCVpDE,GAHAX,EAAA,IACAA,EAAA,IAEAA,EAAA,KDkBIY,EAAmBX,EAAuBU,GCjB9CE,EAAAb,EAAA,IDqBIc,EAAeb,EAAuBY,GClBpCE,GAFNf,EAAA,IAEegB,SAASC,eAAe,SACjCC,KAAUR,EAAAN,WACVe,YAMAC,GAHWF,EAAQG,SAGRH,EAAQI,OAAO,SAACD,EAAUE,GAEzCC,QAAQC,IAAIF,EAAQF,EAASK,SAAUL,EAASM,UAChDpB,EAAAqB,QACEtB,EAAAF,QAAAyB,cAAArB,EAAAsB,UAAUX,MAAOA,GACfb,EAAAF,QAAAyB,cAAAf,EAAAV,QAAA,OAEFW,KAKJG,GAAQa,KAAK,KAAOC,KAAM,UAG1BZ","file":"0.0afe76b5f8955d654fe4.hot-update.js","sourcesContent":["webpackHotUpdate(0,{\n\n/***/ 44:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = __webpack_require__(0);\n\nvar _reactRedux = __webpack_require__(5);\n\nvar _createBrowserHistory = __webpack_require__(38);\n\nvar _createBrowserHistory2 = _interopRequireDefault(_createBrowserHistory);\n\nvar _reactRouter = __webpack_require__(81);\n\nvar _reactRouterRedux = __webpack_require__(94);\n\nvar _configureStore = __webpack_require__(37);\n\nvar _configureStore2 = _interopRequireDefault(_configureStore);\n\nvar _components = __webpack_require__(36);\n\nvar _components2 = _interopRequireDefault(_components);\n\nvar _preact = __webpack_require__(39);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar rootEl = document.getElementById('root');\nvar history = (0, _createBrowserHistory2.default)();\nvar store = _configureStore2.default;\n\n// Get the current location.\nvar location = history.location;\n\n// Listen for changes to the current location.\nvar unlisten = history.listen(function (location, action) {\n  // location is an object like window.location\n  console.log(action, location.pathname, location.state);\n  (0, _reactDom.render)(_react2.default.createElement(\n    _reactRedux.Provider,\n    { store: store },\n    _react2.default.createElement(_components2.default, null)\n  ), rootEl);\n});\n\n// Use push, replace, and go to navigate around.\nhistory.push('/', { some: 'state' });\n\n// To stop listening, call the function returned from listen().\nunlisten();\n//react-redux 提供Provider组件，可以让容器组件拿到state。\n//Provider在根组件外面包了一层，这样一来，根组件的所有子组件就默认都可以拿到state了。\n//render 是 React 的最基本方法，用于将模板转为 HTML 语言，并插入指定的 DOM 节点。\n//再次render()，只附加事件处理程序，从而拥有非常高性能的第一次加载体验。\n// render(\n//   <Provider store={store}>\n//     <Index />\n//   </Provider>,\n//   rootEl\n// )\n\n/***/ })\n\n})\n\n\n// WEBPACK FOOTER //\n// 0.0afe76b5f8955d654fe4.hot-update.js","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport createHistory from \"history/createBrowserHistory\";\n\nimport { Router, Route, browserHistory } from 'react-router'\nimport { syncHistoryWithStore, routerReducer } from 'react-router-redux'\n\nimport configureStore from './store/configureStore';\nimport Index from './components';\nimport { h, Component } from 'preact';\n\nconst rootEl = document.getElementById('root');\nconst history = createHistory();\nconst store = configureStore;\n \n// Get the current location.\nconst location = history.location\n \n// Listen for changes to the current location.\nconst unlisten = history.listen((location, action) => {\n  // location is an object like window.location\n  console.log(action, location.pathname, location.state);\n  render(\n    <Provider store={store}>\n      <Index />\n    </Provider>,\n    rootEl\n  )\n})\n \n// Use push, replace, and go to navigate around.\nhistory.push('/', { some: 'state' })\n \n// To stop listening, call the function returned from listen().\nunlisten()\n//react-redux 提供Provider组件，可以让容器组件拿到state。\n//Provider在根组件外面包了一层，这样一来，根组件的所有子组件就默认都可以拿到state了。\n//render 是 React 的最基本方法，用于将模板转为 HTML 语言，并插入指定的 DOM 节点。\n//再次render()，只附加事件处理程序，从而拥有非常高性能的第一次加载体验。\n// render(\n//   <Provider store={store}>\n//     <Index />\n//   </Provider>,\n//   rootEl\n// )\n\n\n\n// WEBPACK FOOTER //\n// ./public/client/index.js"],"sourceRoot":""}